$sqlServerName="sqldataengfree"
$sqlDatabaseName="dbdataengfreesql"
$sqlServerAdminUser="sqladmin"
$sqlServerAdminPassword="Password123"

# Get the SQL Server connection string
$sqlConnectionString = "Server=tcp:$sqlServerName.database.windows.net,1433;Initial Catalog=$sqlDatabaseName;Persist Security Info=False;User ID=$sqlServerAdminUser;Password=$sqlServerAdminPassword;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"

# Create a linked service JSON file for SQL Database
$sqlProperties = @{
    type = "AzureSqlDatabase"
    typeProperties = @{
        connectionString = "$sqlConnectionString"
    }
}|ConvertTo-Json | Out-File -FilePath "linkedServiceSql.json"

# Create a Data Factory linked service to the SQL Database
az datafactory linked-service create --resource-group $resourceGroup --factory-name "adfdataengfree" --name "sql database adf demo" --properties "linkedServiceSql.json"

# delete JSON file
Remove-Item -Path "linkedServiceSql.json"

# Define app registration name, etc.
# needed for the service principal
$appId=$(az ad app create --display-name $appRegistration --query appId --output tsv)

# Create the service principal
# needed to connect databricks to the storage account
az ad sp create --id $appId

# Assign a role to the service principal
az role assignment create --assignee $appId --role "Storage Blob Data Contributor" --scope $storageAccountId

# to connect to the storage account from Databricks

# Get the object ID of the service principal created above
az ad app list --display-name $appRegistration --query "[0].appId" --output tsv

# Create a secret for the service principal
$spnPassword=$(az ad sp credential reset --id $appId --query password --output tsv)
echo $spnPassword

# get the tenant ID
az account show --query "[tenantId]" --output tsv